plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-android-extensions'
    id 'kotlin-kapt'
    id "com.google.protobuf" version "0.8.17"
}
apply from: 'multiple-channel.gradle'

def cfg = rootProject.ext

android {
    compileSdk cfg.android.compileSdkVersion
    buildToolsVersion cfg.android.buildToolsVersion

    defaultConfig {
        applicationId cfg.applicationId['app']
        minSdk cfg.android.minSdkVersion
        targetSdk cfg.android.targetSdkVersion
        versionCode cfg.android.versionCode
        versionName cfg.android.versionName

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    kapt {
        arguments {
            arg("AROUTER_MODULE_NAME", project.getName())
        }
    }

    signingConfigs {
        release {
            keyAlias 'wxx'
            keyPassword 'wxx@123456'
            storePassword 'wxx@123456'
            storeFile file('../keystore/wxx.jks')
        }

        debug {

        }
    }

    buildTypes {
        release {
            signingConfig signingConfigs.release
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }

        debug {
            signingConfig signingConfigs.release
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        viewBinding true
    }
}

walle {
    // 指定渠道包的输出路径
    apkOutputFolder = new File("${project.buildDir}/outputs/channels")
    // 定制渠道包的APK的文件名称
    apkFileNameFormat = '${appName}-${packageName}-${channel}-${buildType}-v${versionName}-${versionCode}-${buildTime}.apk'
    // 渠道配置文件
    channelFile = new File("${project.getProjectDir()}/channel")
}

def androidxDependencies = rootProject.ext.androidx

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'com.google.android.material:material:1.3.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.annotation:annotation:1.2.0'
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.3.1'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.3.1'

    androidxDependencies.each { k, v -> implementation v }

    api project(':network')

    implementation cfg.library["logger"]

    implementation cfg.library["arouter"]
    kapt cfg.library["arouter-compiler"]

    implementation cfg.library["lottie"]

    implementation cfg.library["protobuf-javalite"]

    implementation cfg.library["coil"]

    implementation cfg.library["banner"]

    implementation cfg.library["walle"]

    implementation cfg.library["room-runtime"]
    implementation cfg.library["room-ktx"]
//    implementation cfg.library["room-paging"]
    kapt cfg.library["room-compiler"]

    implementation cfg.library["x5-webview"]

    implementation cfg.library["autosize"]

    implementation cfg.library["recyclerview-adapter-helper"]
}

protobuf {
    protoc {
        artifact = "com.google.protobuf:protoc:3.14.0"
    }
    generateProtoTasks {
        all().each { task ->
            task.builtins {
                java {
                    option 'lite'
                }
            }
        }
    }
}